# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR The FreeBSD Project
# This file is distributed under the same license as the FreeBSD Documentation package.
# Fernando  Apesteguía <fernando.apesteguia@gmail.com>, 2021, 2023.
msgid ""
msgstr ""
"Project-Id-Version: FreeBSD Documentation VERSION\n"
"POT-Creation-Date: 2025-05-01 19:56-0300\n"
"PO-Revision-Date: 2023-07-28 04:45+0000\n"
"Last-Translator: Fernando  Apesteguía <fernando.apesteguia@gmail.com>\n"
"Language-Team: Spanish <https://translate-dev.freebsd.org/projects/"
"documentation/booksarch-handbooksysinit_index/es/>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.17\n"

#. type: Title =
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:1
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:14
#, no-wrap
msgid "The SYSINIT Framework"
msgstr "El marco SYSINIT"

#. type: YAML Front Matter: title
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:1
#, no-wrap
msgid "Chapter 5. The SYSINIT Framework"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:52
#, fuzzy
msgid ""
"SYSINIT is the framework for a generic call sort and dispatch mechanism. "
"FreeBSD currently uses it for the dynamic initialization of the kernel. "
"SYSINIT allows FreeBSD's kernel subsystems to be reordered, and added, "
"removed, and replaced at kernel link time when the kernel or one of its "
"modules is loaded without having to edit a statically ordered initialization "
"routing and recompile the kernel. This system also allows kernel modules, "
"currently called _KLD's_, to be separately compiled, linked, and initialized "
"at boot time and loaded even later while the system is already running. This "
"is accomplished using the \"kernel linker\" and \"linker sets\"."
msgstr ""
"SYSINIT es el marco para un mecanismo genérico de clasificación y envío de "
"llamadas. FreeBSD lo usa actualmente para la inicialización dinámica del "
"kernel. SYSINIT permite reordenar, agregar, eliminar y reemplazar los "
"subsistemas del kernel de FreeBSD en el momento del enlace del kernel cuando "
"el kernel o uno de sus módulos está cargado sin tener que editar un "
"enrutamiento de inicialización ordenado estáticamente y recompilar el "
"kernel. Este sistema también permite módulos del kernel, actualmente "
"llamados <firstterm>KLD's</firstterm>, para ser compilado, vinculado e "
"inicializado por separado en el momento del arranque y cargado incluso más "
"tarde mientras el sistema ya está en ejecución. Esto se logra usando el "
"<quote>kernel linker</quote>y<quote>conjuntos de enlazadores</quote>."

#. type: Title ==
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:54
#, no-wrap
msgid "Terminology"
msgstr "Terminología"

#. type: Labeled list
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:56
#, no-wrap
msgid "Linker Set"
msgstr "Conjunto de vinculadores"

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:58
msgid ""
"A linker technique in which the linker gathers statically declared data "
"throughout a program's source files into a single contiguously addressable "
"unit of data."
msgstr ""
"Una técnica de enlazador en la que el enlazador recopila datos declarados "
"estáticamente a través de los archivos fuente de un programa en una única "
"unidad de datos direccionable contigua."

#. type: Title ==
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:60
#, no-wrap
msgid "SYSINIT Operation"
msgstr "Operación SYSINIT"

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:63
#, fuzzy
msgid ""
"SYSINIT relies on the ability of the linker to take static data declared at "
"multiple locations throughout a program's source and group it together as a "
"single contiguous chunk of data. This linker technique is called a \"linker "
"set\". SYSINIT uses two linker sets to maintain two data sets containing "
"each consumer's call order, function, and a pointer to the data to pass to "
"that function."
msgstr ""
"SYSINIT se basa en la capacidad del enlazador para tomar datos estáticos "
"declarados en múltiples ubicaciones a lo largo de la fuente de un programa y "
"agruparlos como un solo fragmento contiguo de datos. Esta técnica de "
"enlazador se llama <quote>linker set</quote>. SYSINIT usa dos conjuntos de "
"enlazadores para mantener dos conjuntos de datos que contienen el orden de "
"llamada de cada consumidor, la función y un puntero a los datos para pasar a "
"esa función."

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:65
#, fuzzy
msgid ""
"SYSINIT uses two priorities when ordering the functions for execution. The "
"first priority is a subsystem ID giving an overall order for SYSINIT's "
"dispatch of functions. Current predeclared ID's are in [.filename]#<sys/"
"kernel.h># in the enum list `sysinit_sub_id`. The second priority used is an "
"element order within the subsystem. Current predeclared subsystem element "
"orders are in [.filename]#<sys/kernel.h># in the enum list "
"`sysinit_elem_order`."
msgstr ""
"SYSINIT utiliza dos prioridades al ordenar las funciones para su ejecución. "
"La primera prioridad es un ID de subsistema que da un orden general para el "
"envío de funciones de SYSINIT. Las identificaciones predeclaradas actuales "
"están en <filename>&lt;sys/kernel&gt;</filename>en la lista de "
"enumeración<literal>sysinit_sub_id</literal>. la segunda prioridad utilizada "
"es un orden de elementos dentro del subsistema. Los pedidos actuales de "
"elementos del subsistema predeclarados están en <filename>&lt;sys/kernel."
"h&gt;</filename> en la lista de enumeración<literal>sysinit_elem_order</"
"literal>."

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:67
#, fuzzy
msgid ""
"There are currently two uses for SYSINIT. Function dispatch at system "
"startup and kernel module loads, and function dispatch at system shutdown "
"and kernel module unload. Kernel subsystems often use system startup "
"SYSINIT's to initialize data structures, for example the process scheduling "
"subsystem uses a SYSINIT to initialize the run queue data structure. Device "
"drivers should avoid using `SYSINIT()` directly. Instead drivers for real "
"devices that are part of a bus structure should use `DRIVER_MODULE()` to "
"provide a function that detects the device and, if it is present, "
"initializes the device. It will do a few things specific to devices and then "
"call `SYSINIT()` itself. For pseudo-devices, which are not part of a bus "
"structure, use `DEV_MODULE()`."
msgstr ""
"Actualmente, hay dos usos para SYSINIT. Despacho de funciones al inicio del "
"sistema y cargas del módulo del kernel, y despacho de funciones al cierre "
"del sistema y descarga del módulo del kernel. Los subsistemas del kernel a "
"menudo usan SYSINIT de inicio del sistema para inicializar estructuras de "
"datos, por ejemplo, el subsistema de programación de procesos usa un SYSINIT "
"para inicializar la estructura de datos de la cola de ejecución. Los "
"controladores de dispositivos deben evitar el uso <literal>SYSINIT()</"
"literal>directamente. En su lugar, los controladores para dispositivos "
"reales que forman parte de una estructura de bus deben usar "
"<literal>DRIVER_MODULE()</literal> para proporcionar una función que detecta "
"el dispositivo y, si está presente, inicializa el dispositivo. Hará algunas "
"cosas específicas para los dispositivos y luego llamará <literal>SYSINIT()</"
"literal> sí mismo. Para pseudodispositivos, que no forman parte de una "
"estructura de bus, utilice <literal>DEV_MODULE()</literal>."

#. type: Title ==
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:69
#, no-wrap
msgid "Using SYSINIT"
msgstr "Usando SYSINIT"

#. type: Title ===
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:71
#, no-wrap
msgid "Interface"
msgstr "Interfaz"

#. type: Title ====
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:73
#, no-wrap
msgid "Headers"
msgstr "Encabezados"

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:78
#, no-wrap
msgid "<sys/kernel.h>\n"
msgstr ""

#. type: Title ====
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:80
#, no-wrap
msgid "Macros"
msgstr "Macros"

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:86
#, no-wrap
msgid ""
"SYSINIT(uniquifier, subsystem, order, func, ident)\n"
"SYSUNINIT(uniquifier, subsystem, order, func, ident)\n"
msgstr ""

#. type: Title ===
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:88
#, no-wrap
msgid "Startup"
msgstr "Arranque"

#. type: Plain text
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:91
#, fuzzy
msgid ""
"The `SYSINIT()` macro creates the necessary SYSINIT data in SYSINIT's "
"startup data set for SYSINIT to sort and dispatch a function at system "
"startup and module load. `SYSINIT()` takes a uniquifier that SYSINIT uses to "
"identify the particular function dispatch data, the subsystem order, the "
"subsystem element order, the function to call, and the data to pass the "
"function. All functions must take a constant pointer argument."
msgstr ""
"El <literal>SYSINIT()</literal> La macro crea los datos SYSINIT necesarios "
"en el conjunto de datos de inicio de SYSINIT para que SYSINIT clasifique y "
"distribuya una función al inicio del sistema y la carga del módulo. "
"<literal>SYSINIT()</literal> toma un uniquificador que SYSINIT usa para "
"identificar los datos de despacho de la función particular, el orden del "
"subsistema, el orden de los elementos del subsistema, la función a llamar y "
"los datos para pasar la función. Todas las funciones deben tener un "
"argumento de puntero constante."

#. type: Block title
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:92
#, no-wrap
msgid "Example of a `SYSINIT()`"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:98
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:148
#, no-wrap
msgid "#include <sys/kernel.h>\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:104
#, no-wrap
msgid ""
"void foo_null(void *unused)\n"
"{\n"
"        foo_doo();\n"
"}\n"
"SYSINIT(foo, SI_SUB_FOO, SI_ORDER_FOO, foo_null, NULL);\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:108
#, no-wrap
msgid ""
"struct foo foo_voodoo = {\n"
"        FOO_VOODOO;\n"
"}\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:115
#, no-wrap
msgid ""
"void foo_arg(void *vdata)\n"
"{\n"
"        struct foo *foo = (struct foo *)vdata;\n"
"        foo_data(foo);\n"
"}\n"
"SYSINIT(bar, SI_SUB_FOO, SI_ORDER_FOO, foo_arg, &foo_voodoo);\n"
msgstr ""

#. type: delimited block = 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:119
#, fuzzy
msgid ""
"Note that `SI_SUB_FOO` and `SI_ORDER_FOO` need to be in the `sysinit_sub_id` "
"and `sysinit_elem_order` enum's as mentioned above. Either use existing ones "
"or add your own to the enum's. You can also use math for fine-tuning the "
"order a SYSINIT will run in. This example shows a SYSINIT that needs to be "
"run just barely before the SYSINIT's that handle tuning kernel parameters."
msgstr ""
"Tenga en cuenta que <literal>SI_SUB_FOO</literal> y <literal>SI_ORDER_FOO</"
"literal> Necesito estar en el <literal>sysinit_sub_id</literal> y "
"<literal>sysinit_elem_order</literal> enum es como se mencionó "
"anteriormente. Utilice los existentes o agregue los suyos propios a la "
"enumeración. También puede usar matemáticas para ajustar el orden en el que "
"se ejecutará un SYSINIT. Este ejemplo muestra un SYSINIT que debe ejecutarse "
"justo antes de los SYSINIT que manejan los parámetros del kernel de ajuste."

#. type: Block title
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:120
#, no-wrap
msgid "Example of Adjusting `SYSINIT()` Order"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:128
#, no-wrap
msgid ""
"static void\n"
"mptable_register(void *dummy __unused)\n"
"{\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:131
#, no-wrap
msgid ""
"\tapic_register_enumerator(&mptable_enumerator);\n"
"}\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:134
#, no-wrap
msgid ""
"SYSINIT(mptable_register, SI_SUB_TUNABLES - 1, SI_ORDER_FIRST,\n"
"    mptable_register, NULL);\n"
msgstr ""

#. type: Title ===
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:138
#, no-wrap
msgid "Shutdown"
msgstr "Apagar"

#. type: delimited block = 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:141
msgid ""
"The `SYSUNINIT()` macro behaves similarly to the `SYSINIT()` macro except "
"that it adds the SYSINIT data to SYSINIT's shutdown data set."
msgstr ""

#. type: Block title
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:142
#, no-wrap
msgid "Example of a `SYSUNINIT()`"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:154
#, no-wrap
msgid ""
"void foo_cleanup(void *unused)\n"
"{\n"
"        foo_kill();\n"
"}\n"
"SYSUNINIT(foobar, SI_SUB_FOO, SI_ORDER_FOO, foo_cleanup, NULL);\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:158
#, no-wrap
msgid ""
"struct foo_stack foo_stack = {\n"
"        FOO_STACK_VOODOO;\n"
"}\n"
msgstr ""

#. type: delimited block . 4
#: documentation/content/en/books/arch-handbook/sysinit/_index.adoc:163
#, no-wrap
msgid ""
"void foo_flush(void *vdata)\n"
"{\n"
"}\n"
"SYSUNINIT(barfoo, SI_SUB_FOO, SI_ORDER_FOO, foo_flush, &foo_stack);\n"
msgstr ""

#~ msgid ""
#~ "include::shared/attributes/attributes-{{% lang %}}.adoc[] include::shared/"
#~ "{{% lang %}}/teams.adoc[] include::shared/{{% lang %}}/mailing-lists."
#~ "adoc[] include::shared/{{% lang %}}/urls.adoc[]"
#~ msgstr ""
#~ "include::shared/attributes/attributes-{{% lang %}}.adoc[]\n"
#~ "include::shared/{{% lang %}}/teams.adoc[]\n"
#~ "include::shared/{{% lang %}}/mailing-lists.adoc[]\n"
#~ "include::shared/{{% lang %}}/urls.adoc[]"
