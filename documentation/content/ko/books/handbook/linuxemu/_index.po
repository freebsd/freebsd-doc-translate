# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR The FreeBSD Project
# This file is distributed under the same license as the FreeBSD Documentation package.
# "Kyung-tak, Yoo" <stonegaze@me.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: FreeBSD Documentation VERSION\n"
"POT-Creation-Date: 2025-05-01 19:56-0300\n"
"PO-Revision-Date: 2023-08-26 02:56+0000\n"
"Last-Translator: \"Kyung-tak, Yoo\" <stonegaze@me.com>\n"
"Language-Team: Korean <https://translate-dev.freebsd.org/projects/"
"documentation/bookshandbooklinuxemu_index/ko/>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.17\n"

#. type: YAML Front Matter: description
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:1
#, no-wrap
msgid "FreeBSD provides binary compatibility with Linux, allowing users to install and run most Linux binaries on a FreeBSD system without having to first modify the binary"
msgstr "FreeBSD는 Linux와의 바이너리 호환성을 제공하므로 사용자는 바이너리를 수정할 필요 없이 대부분의 Linux 바이너리를 FreeBSD 시스템에서 설치하고 실행할 수 있습니다"

#. type: YAML Front Matter: part
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:1
#, no-wrap
msgid "Part II. Common Tasks"
msgstr "파트 II. 일반적인 작업"

#. type: YAML Front Matter: title
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:1
#, no-wrap
msgid "Chapter 12. Linux Binary Compatibility"
msgstr "12장. Linux 바이너리 호환성"

#. type: Title =
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:15
#, no-wrap
msgid "Linux Binary Compatibility"
msgstr "Linux 바이너리 호환성"

#. type: Title ==
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:53
#, no-wrap
msgid "Synopsis"
msgstr "요약"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:58
msgid ""
"FreeBSD provides *optional* binary compatibility with Linux(R), commonly "
"referred to as Linuxulator, allowing users to install and run unmodified "
"Linux binaries.  It is available for the x86 (both 32 and 64 bit) and "
"AArch64 architectures.  Some Linux-specific operating system features are "
"not yet supported; this mostly happens with functionality specific to "
"hardware or related to system management, such as cgroups or namespaces."
msgstr ""
"FreeBSD는 일반적으로 Linuxulator라고 하는 Linux(R)와의 *선택적* 바이너리 호환"
"성을 제공하여 사용자가 수정되지 않은 Linux 바이너리를 설치하고 실행할 수 있도"
"록 합니다. x86(32 및 64비트 모두) 및 AArch64 아키텍처에서 사용할 수 있습니"
"다.  일부 Linux 특정 운영 체제 기능은 아직 지원되지 않으며, 이는 주로 하드웨"
"어에 고유하거나 cgroups 또는 네임스페이스와 같은 시스템 관리와 관련된 기능에"
"서 발생합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:60
msgid "Before reading this chapter, you should:"
msgstr "이 챕터를 읽기 전에 알아두어야 할 사항입니다:"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:62
msgid ""
"Know how to install crossref:ports[ports,additional third-party software]."
msgstr ""
"crossref:ports[ports,additional third-party software]를 설치하는 방법을 알고 "
"있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:64
msgid "After reading this chapter, you will know:"
msgstr "이 장을 읽고 나면 다음을 알 수 있습니다:"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:66
msgid "How to enable Linux binary compatibility on a FreeBSD system."
msgstr "FreeBSD 시스템에서 Linux 바이너리 호환성을 활성화하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:67
msgid "How to install additional Linux shared libraries."
msgstr "Linux 공유 라이브러리를 추가로 설치하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:68
msgid "How to install Linux applications on a FreeBSD system."
msgstr "FreeBSD 시스템에 Linux 애플리케이션을 설치하는 방법."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:69
msgid "The implementation details of Linux compatibility in FreeBSD."
msgstr "FreeBSD의 Linux 호환성 구현 세부 정보."

#. type: Title ==
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:71
#, no-wrap
msgid "Configuring Linux Binary Compatibility"
msgstr "Linux 바이너리 호환성 구성하기"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:74
msgid "By default, man:linux[4] binary compatibility is not enabled."
msgstr "기본적으로 man:linux[4] 바이너리 호환성은 활성화되어 있지 않습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:76
msgid "To enable the Linux ABI at boot time, execute the following command:"
msgstr "부팅 시 Linux ABI를 활성화하려면 다음 명령을 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:80
#, no-wrap
msgid "# sysrc linux_enable=\"YES\"\n"
msgstr "# sysrc linux_enable=\"YES\"\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:83
#, fuzzy
#| msgid ""
#| "Once enabled, it can be started without rebooting executing the following "
#| "command:"
msgid ""
"Once enabled, it can be started without rebooting by executing the following "
"command:"
msgstr "활성화되면 다음 명령을 실행하여 재부팅하지 않고도 시작할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:87
#, no-wrap
msgid "# service linux start\n"
msgstr "# service linux start\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:90
msgid "This is enough for statically linked Linux binaries to work."
msgstr "이것은 정적으로 연결된 Linux 바이너리가 작동하기에 충분합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:93
msgid ""
"The Linux service will load necessary kernel modules and mount filesystems "
"expected by Linux applications under [.filename]#/compat/linux#.  They can "
"be started in the same way native FreeBSD binaries can; they behave almost "
"exactly like native processes and can be traced and debugged the usual way."
msgstr ""
"Linux 서비스는 필요한 커널 모듈을 로드하고 [.filename]#/compat/linux# 에서 "
"Linux 애플리케이션이 예상하는 파일 시스템을 마운트합니다.  네이티브 FreeBSD "
"바이너리와 동일한 방식으로 시작할 수 있으며, 네이티브 프로세스와 거의 동일하"
"게 동작하고 일반적인 방법으로 추적 및 디버깅할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:95
msgid ""
"The current content of [.filename]#/compat/linux# can be checked executing "
"the following command:"
msgstr ""
"[.filename]#/compat/linux# 의 현재 내용은 다음 명령을 실행하여 확인할 수 있습"
"니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:99
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:146
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:194
#, no-wrap
msgid "# ls -l /compat/linux/\n"
msgstr "# ls -l /compat/linux/\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:102
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:149
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:197
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:244
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:307
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:385
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:451
msgid "The output should be similar to the following:"
msgstr "출력은 아래와 비슷해야 합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:109
#, no-wrap
msgid ""
"total 1\n"
"dr-xr-xr-x  13 root  wheel  512 Apr 11 19:12 dev\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:03 proc\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:03 sys\n"
msgstr ""
"total 1\n"
"dr-xr-xr-x  13 root  wheel  512 Apr 11 19:12 dev\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:03 proc\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:03 sys\n"

#. type: Title ==
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:112
#, no-wrap
msgid "Linux userlands"
msgstr "Linux 사용자공간"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:116
msgid ""
"Linux software requires more than just an ABI to work.  In order to run "
"Linux software a Linux userland must be installed first."
msgstr ""
"Linux 소프트웨어는 단순한 ABI 그 이상이 필요합니다. Linux 소프트웨어를 실행하"
"려면 먼저 Linux 사용자 영역을 설치해야 합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:120
msgid ""
"If all that is wanted is to run some software already included in the Ports "
"tree, it can be installed via package manager and man:pkg[8] will "
"automatically setup the required Linux userland."
msgstr ""
"포트 트리에 이미 포함된 일부 소프트웨어를 실행하기만 하려면 패키지 관리자를 "
"통해 설치할 수 있으며, man:pkg[8]가 필요한 Linux 사용자 영역을 자동으로 설정"
"합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:122
msgid ""
"For example, to install Sublime Text 4, along with all the Linux libraries "
"it depends on, run this command:"
msgstr ""
"예를 들어, Sublime Text 4와 이에 종속된 모든 Linux 라이브러리를 설치하려면 다"
"음 명령을 실행하세요:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:126
#, no-wrap
msgid "# pkg install linux-sublime-text4\n"
msgstr "# pkg install linux-sublime-text4\n"

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:130
#, fuzzy, no-wrap
#| msgid "CentOS Base System from FreeBSD Packages"
msgid "Rocky Linux Base System from FreeBSD Packages"
msgstr "FreeBSD 패키지의 CentOS 기본 시스템"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:133
#, fuzzy
#| msgid "To install the CentOS userland execute the following command:"
msgid "To install the Rocky Linux 9 userland execute the following command:"
msgstr "CentOS 사용자 영역을 설치하려면 다음 명령을 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:137
#, fuzzy, no-wrap
#| msgid "# pkg install linux_base-c7\n"
msgid "# pkg install linux_base-rl9\n"
msgstr "# pkg install linux_base-c7\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:140
#, fuzzy
#| msgid ""
#| "package:emulators/linux_base-c7[] will place the base system derived from "
#| "CentOS 7 into [.filename]#/compat/linux#."
msgid ""
"package:emulators/linux_base-rl9[] will place the base system derived from "
"Rocky Linux 9 into [.filename]#/compat/linux#."
msgstr ""
"package:emulators/linux_base-c7[] 은 CentOS 7에서 파생된 기본 시스템을 [."
"filename]#/compat/linux# 에 배치합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:142
#, fuzzy
#| msgid ""
#| "After installing the package, the contents of [.filename]#/compat/linux# "
#| "can be verified by running the following command to check that the CentOS "
#| "userland has been installed:"
msgid ""
"After installing the package, the contents of [.filename]#/compat/linux# can "
"be verified by running the following command to check that the Rocky Linux "
"userland has been installed:"
msgstr ""
"패키지를 설치한 후 다음 명령을 실행하여 CentOS 사용자 영역이 설치되었는지 확"
"인하여 [.filename]#/compat/linux# 의 내용을 확인할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:167
#, fuzzy, no-wrap
#| msgid ""
#| "total 30\n"
#| "lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 bin -> usr/bin\n"
#| "drwxr-xr-x  13 root  wheel  512 Apr 11 21:10 dev\n"
#| "drwxr-xr-x  25 root  wheel   64 Apr 11 21:10 etc\n"
#| "lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 lib -> usr/lib\n"
#| "lrwxr-xr-x   1 root  wheel    9 Apr 11  2018 lib64 -> usr/lib64\n"
#| "drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 opt\n"
#| "dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 proc\n"
#| "lrwxr-xr-x   1 root  wheel    8 Feb 18 02:10 run -> /var/run\n"
#| "lrwxr-xr-x   1 root  wheel    8 Apr 11  2018 sbin -> usr/sbin\n"
#| "drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 srv\n"
#| "dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 sys\n"
#| "drwxr-xr-x   8 root  wheel    9 Apr 11 21:10 usr\n"
#| "drwxr-xr-x  16 root  wheel   17 Apr 11 21:10 var\n"
msgid ""
"total 36\n"
"drwxr-xr-x   2 root wheel  512 Oct  9 17:28 afs\n"
"lrwxr-xr-x   1 root wheel    7 May 16  2022 bin -> usr/bin\n"
"drwxr-xr-x   3 root wheel  512 Oct  9 17:28 dev\n"
"drwxr-xr-x  24 root wheel 1536 Oct  9 17:28 etc\n"
"lrwxr-xr-x   1 root wheel    7 May 16  2022 lib -> usr/lib\n"
"lrwxr-xr-x   1 root wheel    9 May 16  2022 lib64 -> usr/lib64\n"
"drwxr-xr-x   2 root wheel  512 Oct  9 17:28 opt\n"
"drwxr-xr-x   2 root wheel  512 Oct  9 17:28 proc\n"
"lrwxr-xr-x   1 root wheel    8 Oct  1 03:11 run -> /var/run\n"
"lrwxr-xr-x   1 root wheel    8 May 16  2022 sbin -> usr/sbin\n"
"drwxr-xr-x   2 root wheel  512 Oct  9 17:28 srv\n"
"drwxr-xr-x   2 root wheel  512 Oct  9 17:28 sys\n"
"drwxr-xr-x   8 root wheel  512 Oct  9 17:28 usr\n"
"drwxr-xr-x  16 root wheel  512 Oct  9 17:28 var\n"
msgstr ""
"total 30\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 bin -> usr/bin\n"
"drwxr-xr-x  13 root  wheel  512 Apr 11 21:10 dev\n"
"drwxr-xr-x  25 root  wheel   64 Apr 11 21:10 etc\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 lib -> usr/lib\n"
"lrwxr-xr-x   1 root  wheel    9 Apr 11  2018 lib64 -> usr/lib64\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 opt\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 proc\n"
"lrwxr-xr-x   1 root  wheel    8 Feb 18 02:10 run -> /var/run\n"
"lrwxr-xr-x   1 root  wheel    8 Apr 11  2018 sbin -> usr/sbin\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 srv\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 sys\n"
"drwxr-xr-x   8 root  wheel    9 Apr 11 21:10 usr\n"
"drwxr-xr-x  16 root  wheel   17 Apr 11 21:10 var\n"

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:170
#, no-wrap
msgid "CentOS Base System from FreeBSD Packages"
msgstr "FreeBSD 패키지의 CentOS 기본 시스템"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:178
msgid ""
"package:emulators/linux_base-c7[] has been deprecated following the "
"deprecation of the upstream project.  This means package:emulators/"
"linux_base-c7[] will not receive security updates.  The use of crossref:"
"linuxemu[linuxemu-rockylinux, the Rocky Linux Base System] is recommended "
"unless 32-bit compatibility is needed."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:181
msgid "To install the CentOS userland execute the following command:"
msgstr "CentOS 사용자 영역을 설치하려면 다음 명령을 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:185
#, no-wrap
msgid "# pkg install linux_base-c7\n"
msgstr "# pkg install linux_base-c7\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:188
msgid ""
"package:emulators/linux_base-c7[] will place the base system derived from "
"CentOS 7 into [.filename]#/compat/linux#."
msgstr ""
"package:emulators/linux_base-c7[] 은 CentOS 7에서 파생된 기본 시스템을 [."
"filename]#/compat/linux# 에 배치합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:190
msgid ""
"After installing the package, the contents of [.filename]#/compat/linux# can "
"be verified by running the following command to check that the CentOS "
"userland has been installed:"
msgstr ""
"패키지를 설치한 후 다음 명령을 실행하여 CentOS 사용자 영역이 설치되었는지 확"
"인하여 [.filename]#/compat/linux# 의 내용을 확인할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:214
#, no-wrap
msgid ""
"total 30\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 bin -> usr/bin\n"
"drwxr-xr-x  13 root  wheel  512 Apr 11 21:10 dev\n"
"drwxr-xr-x  25 root  wheel   64 Apr 11 21:10 etc\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 lib -> usr/lib\n"
"lrwxr-xr-x   1 root  wheel    9 Apr 11  2018 lib64 -> usr/lib64\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 opt\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 proc\n"
"lrwxr-xr-x   1 root  wheel    8 Feb 18 02:10 run -> /var/run\n"
"lrwxr-xr-x   1 root  wheel    8 Apr 11  2018 sbin -> usr/sbin\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 srv\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 sys\n"
"drwxr-xr-x   8 root  wheel    9 Apr 11 21:10 usr\n"
"drwxr-xr-x  16 root  wheel   17 Apr 11 21:10 var\n"
msgstr ""
"total 30\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 bin -> usr/bin\n"
"drwxr-xr-x  13 root  wheel  512 Apr 11 21:10 dev\n"
"drwxr-xr-x  25 root  wheel   64 Apr 11 21:10 etc\n"
"lrwxr-xr-x   1 root  wheel    7 Apr 11  2018 lib -> usr/lib\n"
"lrwxr-xr-x   1 root  wheel    9 Apr 11  2018 lib64 -> usr/lib64\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 opt\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 proc\n"
"lrwxr-xr-x   1 root  wheel    8 Feb 18 02:10 run -> /var/run\n"
"lrwxr-xr-x   1 root  wheel    8 Apr 11  2018 sbin -> usr/sbin\n"
"drwxr-xr-x   2 root  wheel    2 Apr 11 21:10 srv\n"
"dr-xr-xr-x   1 root  wheel    0 Apr 11 21:25 sys\n"
"drwxr-xr-x   8 root  wheel    9 Apr 11 21:10 usr\n"
"drwxr-xr-x  16 root  wheel   17 Apr 11 21:10 var\n"

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:217
#, no-wrap
msgid "Debian / Ubuntu Base System with debootstrap"
msgstr "Debootstrap과 데비안/우분투 기본 시스템"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:221
msgid ""
"An alternative way of providing Linux shared libraries is by using package:"
"sysutils/debootstrap[].  This has the advantage of providing a full Debian "
"or Ubuntu distribution."
msgstr ""
"Linux 공유 라이브러리를 제공하는 다른 방법은 package:sysutils/debootstrap[]"
"을 사용하는 것입니다.  이 방법은 전체 데비안 또는 우분투 배포판을 제공한다는 "
"장점이 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:223
msgid "To install debootstrap execute the following command:"
msgstr "debootstrap을 설치하려면 다음 명령을 실행하십시오:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:227
#, no-wrap
msgid "# pkg install debootstrap\n"
msgstr "# pkg install debootstrap\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:231
msgid ""
"man:debootstrap[8] needs man:linux[4] ABI enabled.  Once enabled, execute "
"the following command to install Ubuntu or Debian in [.filename]#/compat/"
"ubuntu#:"
msgstr ""
"man:debootstrap[8] 은 ABI 활성화가 필요합니다. 활성화되면 다음 명령을 실행하"
"여 [.filename]#/compat/ubuntu# 에 Ubuntu 또는 Debian을 설치합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:235
#, no-wrap
msgid "# debootstrap focal /compat/ubuntu\n"
msgstr "# debootstrap focal /compat/ubuntu\n"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:241
msgid ""
"While it is technically possible to install into [.filename]#/compat/linux# "
"instead, it's discouraged due to possible clashes with CentOS-based "
"packages.  Instead, derive the directory name from the distribution or "
"version name, e.g., [.filename]#/compat/ubuntu#."
msgstr ""
"대신 [.filename]#/compat/linux# 에 설치하는 것이 기술적으로 가능하지만 "
"CentOS 기반 패키지와의 충돌 가능성 때문에 권장하지 않습니다. 대신 배포판 또"
"는 버전 이름에서 디렉토리 이름을 가져옵니다(예: [.filename]#/compat/"
"ubuntu# )."

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:262
#, no-wrap
msgid ""
"I: Retrieving InRelease \n"
"I: Checking Release signature\n"
"I: Valid Release signature (key id F6ECB3762474EDA9D21B7022871920D1991BC93C)\n"
"I: Retrieving Packages \n"
"I: Validating Packages \n"
"I: Resolving dependencies of required packages...\n"
"I: Resolving dependencies of base packages...\n"
"I: Checking component main on http://archive.ubuntu.com/ubuntu...\n"
"[...]\n"
"I: Configuring console-setup...\n"
"I: Configuring kbd...\n"
"I: Configuring ubuntu-minimal...\n"
"I: Configuring libc-bin...\n"
"I: Configuring ca-certificates...\n"
"I: Base system installed successfully.\n"
msgstr ""
"I: Retrieving InRelease \n"
"I: Checking Release signature\n"
"I: Valid Release signature (key id F6ECB3762474EDA9D21B7022871920D1991BC93C)\n"
"I: Retrieving Packages \n"
"I: Validating Packages \n"
"I: Resolving dependencies of required packages...\n"
"I: Resolving dependencies of base packages...\n"
"I: Checking component main on http://archive.ubuntu.com/ubuntu...\n"
"[...]\n"
"I: Configuring console-setup...\n"
"I: Configuring kbd...\n"
"I: Configuring ubuntu-minimal...\n"
"I: Configuring libc-bin...\n"
"I: Configuring ca-certificates...\n"
"I: Base system installed successfully.\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:265
msgid "Then set up mounts in [.filename]#/etc/fstab#."
msgstr "그런 다음 [.filename]#/etc/fstab# 에서 마운트합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:269
msgid ""
"If the contents of the home directory should be shared and to be able to run "
"X11 applications, [.filename]#/home# and [.filename]#/tmp# should be mounted "
"in the linux compat area using man:nullfs[5] for loopback."
msgstr ""
"홈을 공유하고 X11 응용 프로그램을 실행할 수 있으려면 [.filename]#/home# 및 [."
"filename]#/tmp# 를, 루프백용 man:nullfs[5] 를 사용하여 Linux 호환 영역에 마운"
"트해야 합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:271
msgid "The following example can be added to [.filename]#/etc/fstab#:"
msgstr "다음 예제는 [.filename]#/etc/fstab# 에 추가할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:282
#, no-wrap
msgid ""
"# Device        Mountpoint              FStype          Options                      Dump    Pass#\n"
"devfs           /compat/ubuntu/dev      devfs           rw,late                      0       0\n"
"tmpfs           /compat/ubuntu/dev/shm  tmpfs           rw,late,size=1g,mode=1777    0       0\n"
"fdescfs         /compat/ubuntu/dev/fd   fdescfs         rw,late,linrdlnk             0       0\n"
"linprocfs       /compat/ubuntu/proc     linprocfs       rw,late                      0       0\n"
"linsysfs        /compat/ubuntu/sys      linsysfs        rw,late                      0       0\n"
"/tmp            /compat/ubuntu/tmp      nullfs          rw,late                      0       0\n"
"/home           /compat/ubuntu/home     nullfs          rw,late                      0       0\n"
msgstr ""
"# Device        Mountpoint              FStype          Options                      Dump    Pass#\n"
"devfs           /compat/ubuntu/dev      devfs           rw,late                      0       0\n"
"tmpfs           /compat/ubuntu/dev/shm  tmpfs           rw,late,size=1g,mode=1777    0       0\n"
"fdescfs         /compat/ubuntu/dev/fd   fdescfs         rw,late,linrdlnk             0       0\n"
"linprocfs       /compat/ubuntu/proc     linprocfs       rw,late                      0       0\n"
"linsysfs        /compat/ubuntu/sys      linsysfs        rw,late                      0       0\n"
"/tmp            /compat/ubuntu/tmp      nullfs          rw,late                      0       0\n"
"/home           /compat/ubuntu/home     nullfs          rw,late                      0       0\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:285
msgid "Then execute man:mount[8]:"
msgstr "그리고나서 man:mount[8] 를 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:289
#, no-wrap
msgid "# mount -al\n"
msgstr "# mount -al\n"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:293
msgid "To access the system using man:chroot[8] execute the following command:"
msgstr ""
"man:chroot[8] 를 사용하여 시스템에 액세스하려면 다음 명령을 실행하십시오:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:297
#, no-wrap
msgid "# chroot /compat/ubuntu /bin/bash\n"
msgstr "# chroot /compat/ubuntu /bin/bash\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:300
msgid "Then man:uname[1] can be executed to check the Linux environment:"
msgstr "그런 다음 man:uname[1] 을 실행하여 Linux 환경을 확인할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:304
#, no-wrap
msgid "# uname -s -r -m\n"
msgstr "# uname -s -r -m\n"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:311
#, no-wrap
msgid "Linux 3.17.0 x86_64\n"
msgstr "Linux 3.17.0 x86_64\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:315
#, fuzzy
#| msgid ""
#| "Once inside the chroot, the system behaves as in a normal Ubuntu "
#| "installation While systemd doesn't work, the man:service[8] command works "
#| "as usual."
msgid ""
"Once inside the chroot, the system behaves as in a normal Ubuntu "
"installation.  While systemd doesn't work, the man:service[8] command works "
"as usual."
msgstr ""
"chroot에 들어가면 시스템은 일반적인 Ubuntu 설치에 따라 작동합니다. systemd가 "
"작동하지 않는 동안 man:service[8] 명령은 평소와 같이 작동합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:319
msgid ""
"To add the package repositories missing from defaults edit the file [."
"filename]#/compat/ubuntu/etc/apt/sources.list#."
msgstr ""
"기본값에서 누락된 패키지 저장소를 추가하려면 [.filename]#/compat/ubuntu/etc/"
"apt/sources.list# 파일을 편집하십시오."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:321
msgid "For amd64 the following example can be used:"
msgstr "amd64의 경우 다음 예제를 사용할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:328
#, no-wrap
msgid ""
"deb http://archive.ubuntu.com/ubuntu focal main universe restricted multiverse\n"
"deb http://security.ubuntu.com/ubuntu/ focal-security universe multiverse restricted main\n"
"deb http://archive.ubuntu.com/ubuntu focal-backports universe multiverse restricted main\n"
"deb http://archive.ubuntu.com/ubuntu focal-updates universe multiverse restricted main\n"
msgstr ""
"deb http://archive.ubuntu.com/ubuntu focal main universe restricted multiverse\n"
"deb http://security.ubuntu.com/ubuntu/ focal-security universe multiverse restricted main\n"
"deb http://archive.ubuntu.com/ubuntu focal-backports universe multiverse restricted main\n"
"deb http://archive.ubuntu.com/ubuntu focal-updates universe multiverse restricted main\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:331
msgid "For arm64 this other example can be used:"
msgstr "arm64의 경우 이 다른 예를 사용할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:335
#, no-wrap
msgid "deb http://ports.ubuntu.com/ubuntu-ports bionic main universe restricted multiverse\n"
msgstr "deb http://ports.ubuntu.com/ubuntu-ports bionic main universe restricted multiverse\n"

#. type: Title ==
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:339
#, no-wrap
msgid "Advanced Topics"
msgstr "고급 주제"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:342
msgid ""
"A list of all Linux-related man:sysctl[8] knobs can be found in man:linux[4]."
msgstr ""
"모든 Linux 관련 man:sysctl[8] 노브 목록은 man:linux[4]에서 확인할 수 있습니"
"다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:344
msgid "Some applications require specific filesystems to be mounted."
msgstr "일부 응용 프로그램은 특정 파일 시스템을 마운트해야 합니다."

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:346
msgid ""
"This is normally handled by the [.filename]#/etc/rc.d/linux# script but can "
"be disabled at boot executing the following command:"
msgstr ""
"이는 일반적으로 [.filename]#/etc/rc.d/linux# 스크립트에 의해 처리되지만, [."
"filename]#/etc/rc.conf# 에 이 줄을 추가하여 비활성화할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:350
#, no-wrap
msgid "sysrc linux_mounts_enable=\"NO\"\n"
msgstr "sysrc linux_mounts_enable=\"NO\"\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:353
msgid ""
"Filesystems mounted by the rc script will not work for Linux processes "
"inside chroots or jails; if needed, configure them in [.filename]#/etc/"
"fstab#:"
msgstr ""
"rc 스크립트로 마운트한 파일시스템은 chroots 또는 jail 내부의 Linux 프로세스에"
"서는 작동하지 않으므로 필요한 경우 [.filename]#/etc/fstab# 에서 구성하세요:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:361
#, no-wrap
msgid ""
"devfs      /compat/linux/dev      devfs      rw,late                    0  0\n"
"tmpfs      /compat/linux/dev/shm  tmpfs      rw,late,size=1g,mode=1777  0  0\n"
"fdescfs    /compat/linux/dev/fd   fdescfs    rw,late,linrdlnk           0  0\n"
"linprocfs  /compat/linux/proc     linprocfs  rw,late                    0  0\n"
"linsysfs   /compat/linux/sys      linsysfs   rw,late                    0  0\n"
msgstr ""
"devfs      /compat/linux/dev      devfs      rw,late                    0  0\n"
"tmpfs      /compat/linux/dev/shm  tmpfs      rw,late,size=1g,mode=1777  0  0\n"
"fdescfs    /compat/linux/dev/fd   fdescfs    rw,late,linrdlnk           0  0\n"
"linprocfs  /compat/linux/proc     linprocfs  rw,late                    0  0\n"
"linsysfs   /compat/linux/sys      linsysfs   rw,late                    0  0\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:364
msgid ""
"Since the Linux binary compatibility layer has gained support for running "
"both 32- and 64-bit Linux binaries, it is no longer possible to link the "
"emulation functionality statically into a custom kernel."
msgstr ""
"Linux 바이너리 호환성 계층이 32비트 및 64비트 Linux 바이너리 실행을 모두 지원"
"하게 되었으므로 더 이상 에뮬레이션 기능을 사용자 지정 커널에 정적으로 연결할 "
"수 없게 되었습니다."

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:366
#, no-wrap
msgid "Installing Additional Libraries Manually"
msgstr "직접 추가 라이브러리 설치하기"

#. type: delimited block = 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:371
msgid ""
"For base system subdirectories created with man:debootstrap[8], use the "
"instructions above instead."
msgstr ""
"man:debootstrap[8]으로 만든 기본 시스템 하위 디렉터리의 경우 위의 지침을 대"
"신 사용하세요."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:374
msgid ""
"If a Linux application complains about missing shared libraries after "
"configuring Linux binary compatibility, determine which shared libraries the "
"Linux binary needs and install them manually."
msgstr ""
"Linux 바이너리 호환성을 구성한 후 Linux 애플리케이션에서 공유 라이브러리가 누"
"락되었다고 불평하는 경우 Linux 바이너리에 필요한 공유 라이브러리를 결정하고 "
"수동으로 설치하세요."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:376
msgid ""
"From a Linux system using the same CPU architecture, `ldd` can be used to "
"determine which shared libraries the application needs."
msgstr ""
"동일한 CPU 아키텍처를 사용하는 Linux 시스템에서 `ldd` 를 사용하여 애플리케이"
"션에 필요한 공유 라이브러리를 확인할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:378
msgid ""
"For example, to check which shared libraries `linuxdoom` needs, run this "
"command from a Linux system that has Doom installed:"
msgstr ""
"예를 들어, `linuxdoom` 이 필요로 하는 공유 라이브러리를 확인하려면 Doom이 설"
"치된 Linux 시스템에서 이 명령을 실행합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:382
#, no-wrap
msgid "% ldd linuxdoom\n"
msgstr "% ldd linuxdoom\n"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:391
#, no-wrap
msgid ""
"libXt.so.3 (DLL Jump 3.1) => /usr/X11/lib/libXt.so.3.1.0\n"
"libX11.so.3 (DLL Jump 3.1) => /usr/X11/lib/libX11.so.3.1.0\n"
"libc.so.4 (DLL Jump 4.5pl26) => /lib/libc.so.4.6.29\n"
msgstr ""
"libXt.so.3 (DLL Jump 3.1) => /usr/X11/lib/libXt.so.3.1.0\n"
"libX11.so.3 (DLL Jump 3.1) => /usr/X11/lib/libX11.so.3.1.0\n"
"libc.so.4 (DLL Jump 4.5pl26) => /lib/libc.so.4.6.29\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:395
msgid ""
"Then, copy all the files in the last column of the output from the Linux "
"system into [.filename]#/compat/linux# on the FreeBSD system.  Once copied, "
"create symbolic links to the names in the first column."
msgstr ""
"그런 다음 Linux 시스템에서 출력의 마지막 열에 있는 모든 파일을 FreeBSD 시스템"
"의 [.filename]#/compat/linux# 에 복사합니다.  복사한 후에는 첫 번째 열에 있"
"는 이름에 대한 심볼릭 링크를 만듭니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:397
msgid "This example will result in the following files on the FreeBSD system:"
msgstr "이 예제는 FreeBSD 시스템에 다음 파일을 생성합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:406
#, no-wrap
msgid ""
"/compat/linux/usr/X11/lib/libXt.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libXt.so.3 -> libXt.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libX11.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libX11.so.3 -> libX11.so.3.1.0\n"
"/compat/linux/lib/libc.so.4.6.29\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.29\n"
msgstr ""
"/compat/linux/usr/X11/lib/libXt.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libXt.so.3 -> libXt.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libX11.so.3.1.0\n"
"/compat/linux/usr/X11/lib/libX11.so.3 -> libX11.so.3.1.0\n"
"/compat/linux/lib/libc.so.4.6.29\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.29\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:411
msgid ""
"If a Linux shared library already exists with a matching major revision "
"number to the first column of the `ldd` output, it does not need to be "
"copied to the file named in the last column, as the existing library should "
"work.  It is advisable to copy the shared library if it is a newer version, "
"though.  The old one can be removed, as long as the symbolic link points to "
"the new one."
msgstr ""
"`ldd` 출력의 첫 번째 열에 메이저 리비전 번호가 일치하는 Linux 공유 라이브러리"
"가 이미 존재하는 경우, 기존 라이브러리가 작동하므로 마지막 열에 있는 파일에 "
"복사할 필요가 없습니다.  공유 라이브러리가 최신 버전인 경우 복사하는 것이 좋"
"습니다.  심볼릭 링크가 새 라이브러리를 가리키고 있다면 이전 라이브러리는 제거"
"할 수 있습니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:413
msgid "For example, these libraries already exist on the FreeBSD system:"
msgstr "예를 들어, 이 라이브러리는 이미 FreeBSD 시스템에 존재합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:418
#, no-wrap
msgid ""
"/compat/linux/lib/libc.so.4.6.27\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.27\n"
msgstr ""
"/compat/linux/lib/libc.so.4.6.27\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.27\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:421
msgid "and `ldd` indicates that a binary requires a later version:"
msgstr "그리고 `ldd` 는 바이너리에 최신 버전이 필요함을 나타냅니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:425
#, no-wrap
msgid "libc.so.4 (DLL Jump 4.5pl26) -> libc.so.4.6.29\n"
msgstr "libc.so.4 (DLL Jump 4.5pl26) -> libc.so.4.6.29\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:429
msgid ""
"Since the existing library is only one or two versions out of date in the "
"last digit, the program should still work with the slightly older version.  "
"However, it is safe to replace the existing [.filename]#libc.so# with the "
"newer version:"
msgstr ""
"기존 라이브러리의 마지막 자릿수가 한두 버전 오래되었으므로 프로그램은 여전히 "
"약간 오래된 버전으로 작동해야 합니다.  그러나 기존 [.filename]#libc.so# 를 최"
"신 버전으로 교체하는 것이 안전합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:434
#, no-wrap
msgid ""
"/compat/linux/lib/libc.so.4.6.29\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.29\n"
msgstr ""
"/compat/linux/lib/libc.so.4.6.29\n"
"/compat/linux/lib/libc.so.4 -> libc.so.4.6.29\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:438
msgid ""
"Generally, one will need to look for the shared libraries that Linux "
"binaries depend on only the first few times that a Linux program is "
"installed on FreeBSD.  After a while, there will be a sufficient set of "
"Linux shared libraries on the system to be able to run newly installed Linux "
"binaries without any extra work."
msgstr ""
"일반적으로, 리눅스 바이너리가 의존하는 공유 라이브러리는 리눅스 프로그램을 "
"FreeBSD에 처음 설치하는 몇 번만 찾으면 됩니다.  시간이 지나면 추가 작업 없이 "
"새로 설치된 Linux 바이너리를 실행할 수 있을 만큼 충분한 Linux 공유 라이브러"
"리 세트가 시스템에 있을 것입니다."

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:439
#, no-wrap
msgid "Branding Linux ELF Binaries"
msgstr "Linux ELF 바이너리 브랜딩하기"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:442
msgid ""
"The FreeBSD kernel uses several methods to determine if the binary to be "
"executed is a Linux one: it checks the brand in the ELF file header, looks "
"for known ELF interpreter paths and checks ELF notes; finally, by default, "
"unbranded ELF executables are assumed to be Linux anyway."
msgstr ""
"FreeBSD 커널은 실행할 바이너리가 리눅스 바이너리인지 확인하기 위해 여러 가지 "
"방법을 사용합니다: ELF 파일 헤더에서 브랜드를 확인하고, 알려진 ELF 인터프리"
"터 경로를 찾고, ELF 메모를 확인하고, 마지막으로 기본적으로 브랜드가 없는 ELF "
"실행 파일은 리눅스 파일로 간주합니다."

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:444
msgid ""
"Should all those methods fail, an attempt to execute the binary might result "
"in error message:"
msgstr ""
"모든 메서드가 실패하면 바이너리를 실행하려고 할 때 오류 메시지가 표시될 수 있"
"습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:448
#, no-wrap
msgid "% ./my-linux-elf-binary\n"
msgstr "% ./my-linux-elf-binary\n"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:456
#, no-wrap
msgid ""
"ELF binary type not known\n"
"Abort\n"
msgstr ""
"ELF binary type not known\n"
"Abort\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:459
msgid ""
"To help the FreeBSD kernel distinguish between a FreeBSD ELF binary and a "
"Linux binary, use man:brandelf[1]:"
msgstr ""
"FreeBSD 커널이 FreeBSD ELF 바이너리와 리눅스 바이너리를 구별할 수 있도록 하려"
"면, man:brandelf[1]를 사용합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:463
#, no-wrap
msgid "% brandelf -t Linux my-linux-elf-binary\n"
msgstr "% brandelf -t Linux my-linux-elf-binary\n"

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:465
#, no-wrap
msgid "Installing a Linux RPM Based Application"
msgstr "Linux RPM 기반 애플리케이션 설치하기"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:469
msgid ""
"To install a Linux RPM-based application, first install the package:"
"archivers/rpm4[] package or port.  Once installed, `root` can use this "
"command to install a [.filename]#.rpm#:"
msgstr ""
"Linux RPM 기반 애플리케이션을 설치하려면 먼저 package:archivers/rpm4[] 패키"
"지 또는 포트를 설치합니다.  설치가 완료되면 `root` 는 이 명령을 사용하여 [."
"filename]#.rpm# 을 설치할 수 있습니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:474
#, no-wrap
msgid ""
"# cd /compat/linux\n"
"# rpm2cpio < /path/to/linux.archive.rpm | cpio -id\n"
msgstr ""
"# cd /compat/linux\n"
"# rpm2cpio < /path/to/linux.archive.rpm | cpio -id\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:478
msgid ""
"If necessary, `brandelf` the installed ELF binaries.  Note that this will "
"prevent a clean uninstall."
msgstr ""
"필요한 경우 설치된 ELF 바이너리를`brandelf` 합니다.  이렇게 하면 나중에 "
"clean uninstall이 되지 않습니다."

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:479
#, no-wrap
msgid "Configuring the Hostname Resolver"
msgstr "호스트 네임 리졸버 구성하기"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:482
msgid "If DNS does not work or this error appears:"
msgstr "DNS가 작동하지 않거나 다음 오류가 표시되는 경우:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:487
#, no-wrap
msgid ""
"resolv+: \"bind\" is an invalid keyword resolv+:\n"
"\"hosts\" is an invalid keyword\n"
msgstr ""
"resolv+: \"bind\" is an invalid keyword resolv+:\n"
"\"hosts\" is an invalid keyword\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:490
msgid "configure [.filename]#/compat/linux/etc/host.conf# as follows:"
msgstr "다음과 같이 [.filename]#/compat/linux/etc/host.conf# 을 구성합니다:"

#. type: delimited block . 4
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:495
#, no-wrap
msgid ""
"order hosts, bind\n"
"multi on\n"
msgstr ""
"order hosts, bind\n"
"multi on\n"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:500
msgid ""
"This specifies that [.filename]#/etc/hosts# is searched first and DNS is "
"searched second.  When [.filename]#/compat/linux/etc/host.conf# does not "
"exist, Linux applications use [.filename]#/etc/host.conf# in the host system "
"but they complain since that file does not exist in FreeBSD.  Remove `bind` "
"if a name server is not configured using [.filename]#/etc/resolv.conf#."
msgstr ""
"이는 [.filename]#/etc/hosts# 을 먼저 검색하고 DNS를 두 번째로 검색하도록 지정"
"합니다.  [.filename]#/compat/linux/etc/host.conf# 가 존재하지 않으면 Linux 애"
"플리케이션은 [.filename]#/etc/host.conf# 를 사용하지만 해당 파일이 존재하지 "
"않기 때문에 불평합니다.  네임 서버가 [.filename]#/etc/resolv.conf# 를 사용하"
"여 구성되지 않은 경우 `bind` 를 제거합니다."

#. type: Title ===
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:502
#, no-wrap
msgid "Miscellaneous"
msgstr "기타"

#. type: Plain text
#: documentation/content/en/books/handbook/linuxemu/_index.adoc:504
msgid ""
"More information on how binary compatibility works with Linux(R) can be "
"found in the article link:{linux-emulation}[Linux emulation in FreeBSD]."
msgstr ""
"바이너리 호환성이 Linux(R)와 작동하는 방법에 대한 자세한 내용은 문서 link:"
"{linux-emulation}[FreeBSD의 Linux 에뮬레이션]에서 찾을 수 있습니다."

#~ msgid ""
#~ "FreeBSD provides optional binary compatibility with Linux(R), allowing "
#~ "users to install and run unmodified Linux binaries.  It is available for "
#~ "the i386, amd64, and arm64 architectures."
#~ msgstr ""
#~ "FreeBSD는 리눅스(R)와의 바이너리 호환성을 옵션으로 제공하여 사용자가 수정"
#~ "할 수 없는 리눅스 바이너리를 설치 및 실행할 수 있도록 합니다.  i386, "
#~ "amd64 및 arm64 아키텍처에서 사용할 수 있습니다."

#~ msgid ""
#~ "By default, Linux binary compatibility is not enabled.  To enable it at "
#~ "boot time, add this line to [.filename]#/etc/rc.conf#:"
#~ msgstr ""
#~ "기본적으로 Linux 바이너리 호환성은 사용하도록 설정되어 있지 않습니다.  부"
#~ "팅 시 활성화하려면 [.filename]#/etc/rc.conf 에 이 줄을 추가하세요:"

#~ msgid ""
#~ "Linux binaries linked dynamically (which is the vast majority) also "
#~ "require Linux shared libraries to be installed - they can run on top of "
#~ "the FreeBSD kernel, but they cannot use FreeBSD libraries; this is "
#~ "similar to how 32-bit binaries cannot use native 64-bit libraries.  There "
#~ "are several ways of providing those libraries: one can copy them over "
#~ "from an existing Linux installation using the same architecture, install "
#~ "them from FreeBSD packages, or install using man:debootstrap[8] (from "
#~ "package:sysutils/debootstrap[]), and others."
#~ msgstr ""
#~ "동적으로 링크된 리눅스 바이너리(대부분)는 리눅스 공유 라이브러리를 설치해"
#~ "야 하는데, 이는 32비트 바이너리가 네이티브 64비트 라이브러리를 사용할 수 "
#~ "없는 것과 유사합니다 - FreeBSD 커널 위에서 실행할 수는 있지만 FreeBSD 라이"
#~ "브러리를 사용할 수는 없습니다.  이러한 라이브러리를 제공하는 방법에는 여"
#~ "러 가지가 있습니다. 동일한 아키텍처를 사용하는 기존 Linux 설치에서 복사하"
#~ "거나, FreeBSD 패키지에서 설치하거나, man:debootstrap[8](package:sysutils/"
#~ "debootstrap[])을 사용하여 설치하는 방법 등이 있습니다."

#~ msgid "This method is not yet available for arm64."
#~ msgstr "이 방법은 아직 arm64에서 사용할 수 없습니다."

#~ msgid ""
#~ "After debootstrapping, man:chroot[8] into the newly created directory and "
#~ "install software in a way typical for the Linux distribution inside, for "
#~ "example:"
#~ msgstr ""
#~ "Debootstrapping 후 새로 생성된 디렉터리에 man:chroot[8]를 입력하고 내부에 "
#~ "일반적인 Linux 배포 방식에 따라 소프트웨어를 설치합니다. 예를 들어:"

#~ msgid ""
#~ "It is possible to debootstrap into [.filename]#/compat/linux#, but it is "
#~ "discouraged to avoid collisions with files installed from FreeBSD ports "
#~ "and packages.  Instead, derive the directory name from the distribution "
#~ "or version name, e.g., [.filename]#/compat/ubuntu#.  If the bootstrapped "
#~ "instance is intended to provide Linux shared libraries without having to "
#~ "explicitly use chroot or jails, one can point the kernel at it by "
#~ "updating the `compat.linux.emul_path` sysctl and adding a line like this "
#~ "to [.filename]#/etc/sysctl.conf#:"
#~ msgstr ""
#~ "[.filename]#/compat/linux# 로 부트스트랩을 디부팅할 수도 있지만, FreeBSD "
#~ "포트 및 패키지에서 설치된 파일과의 충돌을 피하기 위해 권장하지 않습니다.  "
#~ "대신 배포판 또는 버전 이름에서 디렉토리 이름을 파생하세요( 예: [."
#~ "filename]#/compat/ubuntu# ).  부트스트랩 인스턴스가 명시적으로 chroot나 "
#~ "jail을 사용하지 않고도 Linux 공유 라이브러리를 제공하려는 경우, `compat."
#~ "linux.emul_path` sysctl을 업데이트하고 [.filename]#/etc/sysctl.conf# 에 다"
#~ "음과 같은 줄을 추가하여 커널이 이를 가리키도록 할 수 있습니다:"

#, no-wrap
#~ msgid "compat.linux.emul_path=\"/compat/ubuntu\"\n"
#~ msgstr "compat.linux.emul_path=\"/compat/ubuntu\"\n"

#~ msgid ""
#~ "This sysctl controls the kernel's path translation mechanism; see man:"
#~ "linux[4] for details.  Please note that changing it might cause trouble "
#~ "for Linux applications installed from FreeBSD packages; one reason is "
#~ "that many of those applications are still 32-bit, while Ubuntu seems to "
#~ "be deprecating 32-bit library support."
#~ msgstr ""
#~ "이 sysctl은 커널의 경로 변환 메커니즘을 제어합니다. 자세한 내용은 man:"
#~ "linux[4]를 참조하세요.  이 값을 변경하면 FreeBSD 패키지에서 설치된 리눅스 "
#~ "애플리케이션에 문제가 발생할 수 있습니다. 그 이유 중 하나는 많은 애플리케"
#~ "이션이 여전히 32비트인 반면 우분투는 32비트 라이브러리 지원을 중단하고 있"
#~ "기 때문입니다."

#~ msgid ""
#~ "The Linux compatibility layer is a work in progress.  Consult https://"
#~ "wiki.freebsd.org/Linuxulator[FreeBSD Wiki - Linuxulator] for more "
#~ "information."
#~ msgstr ""
#~ "리눅스 호환성 계층은 현재 진행 중입니다.  자세한 내용은 https://wiki."
#~ "freebsd.org/Linuxulator[FreeBSD Wiki - Linuxulator]를 참조하세요."

#~ msgid ""
#~ "This section describes how Linux binary compatibility works and is based "
#~ "on an email written to {freebsd-chat} by Terry Lambert mailto:"
#~ "tlambert@primenet.com[tlambert@primenet.com] (Message ID: `<199906020108."
#~ "SAA07001@usr09.primenet.com>`)."
#~ msgstr ""
#~ "이 섹션에서는 Linux 바이너리 호환성이 어떻게 작동하는지에 대해 설명하며, "
#~ "Terry Lambert mailto:tlambert@primenet.com[tlambert@primenet.com](Message "
#~ "ID: `<199906020108.SAA07001@usr09.primenet.com>`)가 {freebsd-chat}에 보낸 "
#~ "이메일을 기반으로 작성되었습니다."

#~ msgid ""
#~ "FreeBSD has an abstraction called an \"execution class loader\".  This is "
#~ "a wedge into the man:execve[2] system call."
#~ msgstr ""
#~ "FreeBSD에는 \"execution class loader\"라는 추상화가 있습니다.  이것은 man:"
#~ "execve[2] 시스템 호출에 쐐기를 박는 것입니다."

#~ msgid ""
#~ "Historically, the UNIX(R) loader examined the magic number (generally the "
#~ "first 4 or 8 bytes of the file) to see if it was a binary known to the "
#~ "system, and if so, invoked the binary loader."
#~ msgstr ""
#~ "과거에는 UNIX(R) 로더가 매직넘버(일반적으로 파일의 처음 4바이트 또는 8바이"
#~ "트)를 검사하여 시스템에 알려진 바이너리인지 확인한 후, 바이너리인 경우 바"
#~ "이너리 로더를 호출했습니다."

#~ msgid ""
#~ "If it was not the binary type for the system, the man:execve[2] call "
#~ "returned a failure, and the shell attempted to start executing it as "
#~ "shell commands.  The assumption was a default of \"whatever the current "
#~ "shell is\"."
#~ msgstr ""
#~ "시스템의 바이너리 유형이 아닌 경우, man:execve[2] 호출은 실패를 반환하고 "
#~ "셸은 셸 명령으로 실행을 시작하려고 시도합니다.  기본값은 \"현재 셸이 무엇"
#~ "이든\"으로 가정했습니다."

#~ msgid ""
#~ "Later, a hack was made for man:sh[1] to examine the first two characters, "
#~ "and if they were `:\\n`, it invoked the man:csh[1] shell instead."
#~ msgstr ""
#~ "나중에 man:sh[1]이 처음 두 문자를 검사하고 `:\\n` 이면 man:csh[1] 셸을 대"
#~ "신 호출하는 핵이 만들어졌습니다."

#~ msgid ""
#~ "FreeBSD has a list of loaders, instead of a single loader, with a "
#~ "fallback to the `#!` loader for running shell interpreters or shell "
#~ "scripts."
#~ msgstr ""
#~ "FreeBSD에는 단일 로더 대신 로더 목록이 있으며, 셸 인터프리터 또는 셸 스크"
#~ "립트를 실행하기 위한 `#!` 로더에 대한 폴백이 있습니다."

#~ msgid ""
#~ "For the Linux ABI support, FreeBSD sees the magic number as an ELF "
#~ "binary.  The ELF loader looks for a specialized _brand_, which is a "
#~ "comment section in the ELF image, and which is not present on SVR4/"
#~ "Solaris(TM) ELF binaries."
#~ msgstr ""
#~ "리눅스 ABI 지원의 경우, FreeBSD는 매직넘버를 ELF 바이너리로 간주합니다.  "
#~ "ELF 로더는 ELF 이미지의 주석 섹션인 특수 _brand_ 를 찾으며, 이는 SVR4/"
#~ "Solaris(TM) ELF 바이너리에는 존재하지 않습니다."

#~ msgid ""
#~ "For Linux binaries to function, they must be _branded_ as type `Linux` "
#~ "using man:brandelf[1]:"
#~ msgstr ""
#~ "Linux 바이너리가 작동하려면 man:brandelf[1]을 사용하여 `Linux` 유형으로 "
#~ "_branded_해야 합니다:"

#, no-wrap
#~ msgid "# brandelf -t Linux file\n"
#~ msgstr "# brandelf -t Linux file\n"

#~ msgid ""
#~ "When the ELF loader sees the `Linux` brand, the loader replaces a pointer "
#~ "in the `proc` structure.  All system calls are indexed through this "
#~ "pointer.  In addition, the process is flagged for special handling of the "
#~ "trap vector for the signal trampoline code, and several other (minor) fix-"
#~ "ups that are handled by the Linux kernel module."
#~ msgstr ""
#~ "ELF 로더가 `Linux` 브랜드를 발견하면 로더는 'proc' 구조체의 포인터를 대체"
#~ "합니다.  모든 시스템 호출은 포인터를 통해 인덱싱됩니다.  또한 신호 트램폴"
#~ "린 코드에 대한 트랩 벡터의 특수 처리와 Linux 커널 모듈에서 처리하는 몇 가"
#~ "지 다른 (사소한) 수정 사항을 위해 프로세스에 플래그가 지정됩니다."

#~ msgid ""
#~ "The Linux system call vector contains, among other things, a list of "
#~ "`sysent[]` entries whose addresses reside in the kernel module."
#~ msgstr ""
#~ "Linux 시스템 호출 벡터에는 무엇보다도 커널 모듈에 주소가 있는 `sysent[]` "
#~ "항목 목록이 포함되어 있습니다."

#~ msgid ""
#~ "When a system call is called by the Linux binary, the trap code "
#~ "dereferences the system call function pointer off the `proc` structure, "
#~ "and gets the Linux, not the FreeBSD, system call entry points."
#~ msgstr ""
#~ "Linux 바이너리가 시스템 호출을 호출하면 트랩 코드는 `proc` 구조에서 시스"
#~ "템 호출 함수 포인터를 역참조하고 FreeBSD가 아닌 Linux의 시스템 호출 진입점"
#~ "을 가져옵니다."

#~ msgid ""
#~ "Linux mode dynamically _reroots_ lookups.  This is, in effect, equivalent "
#~ "to `union` file system mounts.  First, an attempt is made to look up the "
#~ "file in [.filename]#/compat/linux/original-path#.  If that fails, the "
#~ "lookup is done in [.filename]#/original-path#.  This makes sure that "
#~ "binaries that require other binaries can run.  For example, the Linux "
#~ "toolchain can all run under Linux ABI support.  It also means that the "
#~ "Linux binaries can load and execute FreeBSD binaries, if there are no "
#~ "corresponding Linux binaries present, and that a man:uname[1] command can "
#~ "be placed in the [.filename]#/compat/linux# directory tree to ensure that "
#~ "the Linux binaries cannot tell they are not running on Linux."
#~ msgstr ""
#~ "리눅스 모드의 동적 _reroots_ 조회.  이는 사실 `유니온` 파일 시스템 마운트"
#~ "와 동일합니다.  먼저 [.filename]#/compat/linux/original-path# 에서 파일을 "
#~ "조회하려고 시도합니다.  실패하면 [.filename]#/original-path# 에서 조회가 "
#~ "수행됩니다.  이렇게 하면 다른 바이너리가 필요한 바이너리를 실행할 수 있습"
#~ "니다.  예를 들어 Linux 툴체인은 모두 Linux ABI 지원 하에서 실행될 수 있습"
#~ "니다.  또한 해당 Linux 바이너리가 없는 경우 FreeBSD 바이너리를 로드하고 실"
#~ "행할 수 있으며, man:uname[1] 명령을 [.filename]#/compat/linux# 디렉토리 트"
#~ "리에 배치하여 Linux 바이너리가 Linux에서 실행되고 있지 않다는 것을 알 수 "
#~ "없도록 할 수 있습니다."

#~ msgid ""
#~ "In effect, there is a Linux kernel in the FreeBSD kernel.  The various "
#~ "underlying functions that implement all of the services provided by the "
#~ "kernel are identical to both the FreeBSD system call table entries, and "
#~ "the Linux system call table entries: file system operations, virtual "
#~ "memory operations, signal delivery, and System V IPC.  The only "
#~ "difference is that FreeBSD binaries get the FreeBSD _glue_ functions, and "
#~ "Linux binaries get the Linux _glue_ functions.  The FreeBSD _glue_ "
#~ "functions are statically linked into the kernel, and the Linux _glue_ "
#~ "functions can be statically linked, or they can be accessed via a kernel "
#~ "module."
#~ msgstr ""
#~ "사실상 FreeBSD 커널에는 리눅스 커널이 있습니다.  커널이 제공하는 모든 서비"
#~ "스를 구현하는 다양한 기본 함수는 파일 시스템 작업, 가상 메모리 작업, 신호 "
#~ "전달 및 System V IPC와 같은 FreeBSD 시스템 호출 테이블 항목과 Linux 시스"
#~ "템 호출 테이블 항목 모두와 동일합니다.  유일한 차이점은 FreeBSD 바이너리"
#~ "는 FreeBSD _glue_ 함수를, Linux 바이너리는 Linux _glue_ 함수를 가져온다는 "
#~ "점입니다.  FreeBSD _glue_ 함수는 커널에 정적으로 링크되어 있고, Linux "
#~ "_glue_ 함수는 정적으로 링크되거나 커널 모듈을 통해 액세스할 수 있습니다."

#~ msgid ""
#~ "Technically, this is not really emulation, it is an ABI implementation.  "
#~ "It is sometimes called \"Linux emulation\" because the implementation was "
#~ "done at a time when there was no other word to describe what was going "
#~ "on.  Saying that FreeBSD ran Linux binaries was not true, since the code "
#~ "was not compiled in."
#~ msgstr ""
#~ "엄밀히 말하면 이것은 에뮬레이션이 아니라 ABI 구현입니다.  이 구현은 무슨 "
#~ "일이 일어나고 있는지 설명할 다른 단어가 없던 시절에 이루어졌기 때문에 "
#~ "\"Linux 에뮬레이션\"이라고도 불립니다.  코드가 컴파일되지 않았기 때문에 "
#~ "FreeBSD가 Linux 바이너리를 실행한다는 말은 사실이 아닙니다."
